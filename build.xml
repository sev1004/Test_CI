<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="Test_CI">
    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
  	<property name="pmd.home.dir" location="C:/SATool/pmd-bin-5.3.1" />
  	    
  	<property name="lib.dir" location="${basedir}/lib" />
    <property name="src.dir" location="${basedir}/src" />
    <property name="bin.dir" location="${basedir}/bin" />
    <property name="htm.dir" location="${basedir}/html" />
    
    <property name="report.dir" location="${basedir}/report" />
    <property name="report.pmd.dir" location="${report.dir}/pmd" />
              	
              	
	<path id="run.classpath">
	        <pathelement path="${bin.dir}" />
	    </path>
	
	    <target name="clean" description="Delete all result to start with a clean build.">
	        <delete dir="${report.pmd.dir}" />
	        <delete dir="${bin.dir}" />
	    </target>
	
	    <path id="pmd.classpath">
	        <pathelement location="${build}" />
	        <fileset dir="${pmd.home.dir}/lib/">
	            <include name="*.jar" />
	        </fileset>
	    </path>
	    <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="pmd.classpath" />
	    <target name="report.pmd">
	        <mkdir dir="${report.pmd.dir}" />
	        <pmd rulesetfiles="${pmd.home.dir}/rulesets/basic.xml">
	            <formatter type="xml" toFile="${report.pmd.dir}/pmd_report.xml" />
	            <fileset dir="${src.dir}">
	                <include name="**/*.java" />
	            </fileset>
	        </pmd>
	    	
    	<xslt in="${report.pmd.dir}/pmd_report.xml"
    	              style="${pmd.home.dir}/etc/xslt/pmd-report-per-class.xslt"
    	              out="${report.pmd.dir}/pmd_report.html"/>
    	    </target>
    	    
    	    <target name="run"
    	            description="Run the build"
    	            depends="clean, 
    	                report.pmd"
    	    >
    	    </target>
              	
    <path id="Test_CI.classpath">
        <pathelement location="bin"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
              	
              	
  <!--  <target name="clean">
        <delete dir="bin"/>
    </target>-->
              	
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="Test_CI.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="main">
        <java classname="TPackage.main" failonerror="true" fork="yes">
            <classpath refid="Test_CI.classpath"/>
        </java>
    </target>
</project>
